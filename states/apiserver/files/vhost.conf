{% set interface = 'eth1' if salt['grains.get']('civix:environment').startswith('vagrant') else 'eth0' -%}
{% set addr = salt['network.interface_ip'](interface) -%}
{% set host = salt['network.get_hostname']() -%}
{% set domain = salt['pillar.get']('civix:domain', 'powerlinegroups.com') %}

{% set env = salt['grains.get']('civix:environment') -%}
{% if env.startswith("prod") -%}
    {% set api = "api-prod" -%}
{% elif env.startswith("staging") -%}
    {% set api = "api-staging" -%}
{% elif env.startswith("dev") -%}
    {% set api = "api-dev" -%}
{% else -%}
    {% set api = "" -%}
{% endif -%}


server {
    listen 80;
    server_name {{ host }} {{ addr }} {{ api }}.{{ domain }};
    return 301 https://$host$request_uri;
}

server {

    listen 443;
    server_name {{ host }} {{ addr }} {{ api }}.{{ domain }};

    root /srv/{{ project }}/apiserver/web;

    ssl on;
    ssl_certificate /srv/certs/{{ project }}-server.crt;
    ssl_certificate_key /srv/certs/{{ project }}-server.key;

    location / {
        # try to serve file directly, fallback to rewrite
        try_files $uri @rewriteapp;
    }

    location @rewriteapp {
        # rewrite all to app.php
        rewrite ^(.*)$ /app.php/$1 last;
    }

    location ~ ^/(app|app_dev|config)\.php(/|$) {
        fastcgi_pass unix:/var/run/fpm-{{ project }}.sock;
        fastcgi_split_path_info ^(.+\.php)(/.*)$;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
    }

    error_log /srv/log/api_error_{{ project }}.log;
    access_log /srv/log/api_access_{{ project }}.log;
    client_max_body_size 10m;
}
